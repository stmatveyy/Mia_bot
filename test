from apscheduler.jobstores.redis import RedisJobStore
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from time import sleep
from random import randint

jobstores = {
    'default': RedisJobStore(host='localhost', port=6379, db=0)
}

def num_gen():
    i = randint()
    while True:
        yield i
        i += 1

scheduler = AsyncIOScheduler(jobstores=jobstores)
scheduler.start()

# Function to add a user-specific job
def add_user_job(user_id, job_function, scheduler: AsyncIOScheduler, trigger, *args, **kwargs):
    job_number = hash(job_function)
    job_id = f"user_{user_id}_{job_function.__name__}_{job_number}"
    scheduler.add_job(job_function, trigger, seconds=2, id=job_id, args=args, kwargs=kwargs)

# Example job function
def my_job_function():
    print("Job executed")

# Add a job for a specific user
add_user_job(123, my_job_function, scheduler)

sleep(5)
# To remove a user-specific job
def remove_user_job(user_id, job_function: callable, scheduler: AsyncIOScheduler):
    job_number = hash(job_function)
    job_id = f"user_{user_id}_{job_function.__name__}_{job_number}"
    scheduler.remove_job(job_id)

# Remove the job for the specific user
remove_user_job(123, my_job_function, scheduler)
